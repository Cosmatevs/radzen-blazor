@page "/ai"

<PageTitle>AI Features and Integration</PageTitle>

<HeadContent>
    <meta name="description" content="Radzen.Blazor includes built-in AI capabilities and an external integration package that assists you directly in your IDE. Explore RadzenAIChat and Radzen.Mcp for enhanced AI interactions in your Blazor applications.">
</HeadContent>

<RadzenText TextStyle="TextStyle.H2" TagName="TagName.H1" class="rz-pt-8">
    AI Features and Integration
</RadzenText>

<RadzenMarkdown AutoLinkHeadingDepth="3">
Radzen.Blazor includes built-in AI capabilities, and we also provide an external integration package that can assist you directly in your IDE.

### RadzenAIChat

**RadzenAIChat** is a Blazor-native chat component that integrates with any OpenAI-compatible service (OpenAI, Azure OpenAI, local servers, or third-party providers).

- Works with any OpenAI API-compatible endpoint
- Supports streaming, theming, message history, and extensibility
- Ideal for embedding AI assistants directly into your Blazor apps
- **Demo:** [RadzenAIChat live demo](https://blazor.radzen.com/aichat)

### Radzen.Mcp

**Radzen.Mcp** is a standalone NuGet package that provides a **Model Context Protocol (MCP)** server for Radzen.Blazor related questions.
It works with editors such as VS Code, Visual Studio, Cursor, and other MCP-capable IDEs.

- Get component usage help directly inside your development environment
- Ask about properties, patterns, and best practices without leaving your IDE
- **NuGet:** [Radzen.Mcp package](https://www.nuget.org/packages/Radzen.Mcp)

### More Resources

- [RadzenAIChat Demo](/aichat)
- [Radzen.Mcp on NuGet](https://www.nuget.org/packages/Radzen.Mcp)
</RadzenMarkdown>